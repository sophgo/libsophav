bmcv_image_storage_convert
--------------------------

| 【描述】

| 该接口将源图像格式的对应的数据转换为目的图像的格式数据，并填充在目的图像关联的 device memory 中。

| 【语法】

.. code-block:: c++
    :linenos:
    :lineno-start: 1
    :force:

    bm_status_t bmcv_image_storage_convert(
            bm_handle_t handle,
            int image_num,
            bm_image* input_image,
            bm_image* output_image
    );

| 【参数】

.. list-table:: bmcv_image_storage_convert 参数表
    :widths: 15 15 35

    * - **参数名称**
      - **输入/输出**
      - **描述**
    * - handle
      - 输入
      - 设备环境句柄，通过调用 bm_dev_request 获取。
    * - image_num
      - 输入
      - 输入/输出 image 数量。
    * - \*input
      - 输入
      - 输入 bm_image 对象指针。
    * - \* output
      - 输出
      - 输出 bm_image 对象指针。

| 【返回值】

该函数成功调用时, 返回 BM_SUCCESS。

【格式支持】

1. 支持的数据类型为：

+-----+------------------------+-------------------------------+
| num | input data_type        | output data_type              |
+=====+========================+===============================+
|  1  |                        | DATA_TYPE_EXT_FLOAT32         |
+-----+                        +-------------------------------+
|  2  |                        | DATA_TYPE_EXT_1N_BYTE         |
+-----+                        +-------------------------------+
|  3  | DATA_TYPE_EXT_1N_BYTE  | DATA_TYPE_EXT_1N_BYTE_SIGNED  |
+-----+                        +-------------------------------+
|  4  |                        | DATA_TYPE_EXT_FP16            |
+-----+                        +-------------------------------+
|  5  |                        | DATA_TYPE_EXT_BF16            |
+-----+------------------------+-------------------------------+


2. 输入支持色彩格式为：

+-----+-------------------------------+
| num | input image_format            |
+=====+===============================+
|  1  | FORMAT_YUV420P                |
+-----+-------------------------------+
|  2  | FORMAT_YUV422P                |
+-----+-------------------------------+
|  3  | FORMAT_YUV444P                |
+-----+-------------------------------+
|  4  | FORMAT_NV12                   |
+-----+-------------------------------+
|  5  | FORMAT_NV21                   |
+-----+-------------------------------+
|  6  | FORMAT_NV16                   |
+-----+-------------------------------+
|  7  | FORMAT_NV61                   |
+-----+-------------------------------+
|  8  | FORMAT_RGB_PLANAR             |
+-----+-------------------------------+
|  9  | FORMAT_BGR_PLANAR             |
+-----+-------------------------------+
|  10 | FORMAT_RGB_PACKED             |
+-----+-------------------------------+
|  11 | FORMAT_BGR_PACKED             |
+-----+-------------------------------+
|  12 | FORMAT_RGBP_SEPARATE          |
+-----+-------------------------------+
|  13 | FORMAT_BGRP_SEPARATE          |
+-----+-------------------------------+
|  14 | FORMAT_GRAY                   |
+-----+-------------------------------+
|  15 | FORMAT_COMPRESSED             |
+-----+-------------------------------+
|  16 | FORMAT_YUV422_YUYV            |
+-----+-------------------------------+
|  17 | FORMAT_YUV422_YVYU            |
+-----+-------------------------------+
|  18 | FORMAT_YUV422_UYVY            |
+-----+-------------------------------+
|  19 | FORMAT_YUV422_VYUY            |
+-----+-------------------------------+


3. 输出支持色彩格式为：

+-----+-------------------------------+
| num | input image_format            |
+=====+===============================+
|  1  | FORMAT_YUV420P                |
+-----+-------------------------------+
|  2  | FORMAT_YUV422P                |
+-----+-------------------------------+
|  3  | FORMAT_YUV444P                |
+-----+-------------------------------+
|  4  | FORMAT_NV12                   |
+-----+-------------------------------+
|  5  | FORMAT_NV21                   |
+-----+-------------------------------+
|  6  | FORMAT_NV16                   |
+-----+-------------------------------+
|  7  | FORMAT_NV61                   |
+-----+-------------------------------+
|  8  | FORMAT_RGB_PLANAR             |
+-----+-------------------------------+
|  9  | FORMAT_BGR_PLANAR             |
+-----+-------------------------------+
|  10 | FORMAT_RGB_PACKED             |
+-----+-------------------------------+
|  11 | FORMAT_BGR_PACKED             |
+-----+-------------------------------+
|  12 | FORMAT_RGBP_SEPARATE          |
+-----+-------------------------------+
|  13 | FORMAT_BGRP_SEPARATE          |
+-----+-------------------------------+
|  14 | FORMAT_GRAY                   |
+-----+-------------------------------+
|  15 | FORMAT_YUV422_YUYV            |
+-----+-------------------------------+
|  16 | FORMAT_YUV422_YVYU            |
+-----+-------------------------------+
|  17 | FORMAT_YUV422_UYVY            |
+-----+-------------------------------+
|  18 | FORMAT_YUV422_VYUY            |
+-----+-------------------------------+
|  19 | FORMAT_HSV_PLANAR             |
+-----+-------------------------------+

【注意】

1. 输入输出所有 bm_image 结构必须提前创建，否则返回失败。

#. 所有输入 bm_image 对象的 image_format，data_type，width，height 必须相等，所有输出 bm_image 对象的 image_format，data_type，width，height 必须相等，所有输入输出 bm_image 对象的 width，height 必须相等，否则返回失败。

#. image_num 必须大于等于 1，小于等于 4，否则返回失败。

#. 所有输入对象必须 attach device memory，否则返回失败。

#. 如果输出对象未 attach device memory，则会内部调用 bm_image_alloc_dev_mem 申请内部管理的 device memory，并将转化后的数据填充到 device memory 中。

#. 如果输入图像和输出图像格式相同，则直接返回成功，且不会将原数据拷贝到输出图像中。

#. 暂不支持 image_w > 8192 时的图像格式转换，如果 image_w > 8192 则返回失败。